import { useParams } from 'react-router-dom';
import { 
  dataPhimMoiSapChieu, 
  dataPhimDeCu, 
  dataPhimLe, 
  dataPhimBoMoi,
  dataPhimChieuRap, // ƒê·∫£m b·∫£o import c·∫£ dataPhimChieuRap
  dataPhimThinhHanh // ƒê·∫£m b·∫£o import c·∫£ dataPhimThinhHanh
} from '../../../data'; 
export default function SectionMovie (){
    const { idphim } = useParams();
  const movieIdSlug = idphim; 

  let movie = null; // Bi·∫øn ƒë·ªÉ l∆∞u tr·ªØ th√¥ng tin phim t√¨m ƒë∆∞·ª£c

  // T·∫≠p h·ª£p t·∫•t c·∫£ c√°c ngu·ªìn d·ªØ li·ªáu phim v√†o m·ªôt m·∫£ng ƒë·ªÉ d·ªÖ d√†ng duy·ªát qua
  const allMovieSources = [
    dataPhimMoiSapChieu[0]?.flim, 
    dataPhimDeCu[0]?.flim,        
    dataPhimLe[0]?.flim,          
    dataPhimBoMoi[0]?.flim,       
    dataPhimChieuRap[0]?.flim,    // Th√™m m·∫£ng n√†y v√†o ngu·ªìn t√¨m ki·∫øm
    dataPhimThinhHanh[0]?.flim,   // Th√™m m·∫£ng n√†y v√†o ngu·ªìn t√¨m ki·∫øm
  ].filter(Boolean); // L·ªçc b·ªè c√°c gi√° tr·ªã undefined n·∫øu m·ªôt ngu·ªìn kh√¥ng t·ªìn t·∫°i ho·∫∑c kh√¥ng c√≥ m·∫£ng 'flim'

  // Duy·ªát qua t·ª´ng ngu·ªìn d·ªØ li·ªáu ƒë·ªÉ t√¨m ki·∫øm b·ªô phim c√≥ ID t∆∞∆°ng ·ª©ng
  for (const source of allMovieSources) {
    // So s√°nh tr·ª±c ti·∫øp chu·ªói ID
    const foundMovie = source.find(film => film.idphim === movieIdSlug); 
    if (foundMovie) {
      movie = foundMovie; // G√°n phim t√¨m ƒë∆∞·ª£c v√†o bi·∫øn movie
      break; // D·ª´ng v√≤ng l·∫∑p ngay khi t√¨m th·∫•y phim ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t
    }
  }

  // C√°c style CSS ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a d∆∞·ªõi d·∫°ng ƒë·ªëi t∆∞·ª£ng JavaScript
  const containerStyle = {
    minHeight: '100vh',
    backgroundColor: '#1a202c', // T∆∞∆°ng ƒë∆∞∆°ng bg-gray-900
    color: '#ffffff', // T∆∞∆°ng ƒë∆∞∆°ng text-white
    padding: '1rem', // T∆∞∆°ng ƒë∆∞∆°ng p-4
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    boxSizing: 'border-box', // ƒê·∫£m b·∫£o padding kh√¥ng l√†m tr√†n layout
  };

  const notFoundContainerStyle = {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    minHeight: '100vh',
    backgroundColor: '#1a202c',
    color: '#ffffff',
    textAlign: 'center',
  };

  const notFoundTextStyle = {
    fontSize: '1.5rem', // T∆∞∆°ng ƒë∆∞∆°ng text-2xl
    fontWeight: 'bold',
    color: '#ef4444', // T∆∞∆°ng ƒë∆∞∆°ng text-red-500
  };

  const cardStyle = {
    backgroundColor: '#2d3748', // T∆∞∆°ng ƒë∆∞∆°ng bg-gray-800
    borderRadius: '0.5rem', // T∆∞∆°ng ƒë∆∞∆°ng rounded-lg
    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)', // T∆∞∆°ng ƒë∆∞∆°ng shadow-lg
    overflow: 'hidden',
    display: 'flex',
    flexDirection: 'column', // T∆∞∆°ng ƒë∆∞∆°ng flex-col (m·∫∑c ƒë·ªãnh cho mobile)
    maxWidth: '48rem', // T∆∞∆°ng ƒë∆∞∆°ng max-w-4xl
    width: '100%',
  };

  const imageWrapperStyle = {
    padding: '1rem', // T∆∞∆°ng ƒë∆∞∆°ng p-4
    flexShrink: 0, // NgƒÉn h√¨nh ·∫£nh co l·∫°i
  };

  const imageStyle = {
    width: '100%',
    height: 'auto',
    borderRadius: '0.5rem', // T∆∞∆°ng ƒë∆∞∆°ng rounded-lg
    objectFit: 'cover',
    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
  };

  const infoWrapperStyle = {
    padding: '1rem', // T∆∞∆°ng ƒë∆∞∆°ng p-4
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    flexGrow: 1, // Cho ph√©p ph·∫ßn th√¥ng tin m·ªü r·ªông
  };

  const titleStyle = {
    fontSize: '1.875rem', // T∆∞∆°ng ƒë∆∞∆°ng text-3xl
    fontWeight: '800', // T∆∞∆°ng ƒë∆∞∆°ng font-extrabold
    marginBottom: '1rem', // T∆∞∆°ng ƒë∆∞∆°ng mb-4
    color: '#a78bfa', // T∆∞∆°ng ƒë∆∞∆°ng text-purple-400
  };

  const textStyle = {
    fontSize: '1.125rem', // T∆∞∆°ng ƒë∆∞∆°ng text-lg
    color: '#d1d5db', // T∆∞∆°ng ƒë∆∞∆°ng text-gray-300
    marginBottom: '0.5rem', // T∆∞∆°ng ƒë∆∞∆°ng mb-2
  };

  const descriptionStyle = {
    fontSize: '1rem', // T∆∞∆°ng ƒë∆∞∆°ng text-base
    color: '#9ca3af', // T∆∞∆°ng ƒë∆∞∆°ng text-gray-400
  };

  const buttonContainerStyle = {
    marginTop: '1.5rem', // T∆∞∆°ng ƒë∆∞∆°ng mt-6
  };

  const buttonStyle = {
    backgroundColor: '#dc2626', // T∆∞∆°ng ƒë∆∞∆°ng bg-red-600
    color: '#ffffff', // T∆∞∆°ng ƒë∆∞∆°ng text-white
    fontWeight: 'bold',
    padding: '0.75rem 1.5rem', // T∆∞∆°ng ƒë∆∞∆°ng py-3 px-6
    borderRadius: '9999px', // T∆∞∆°ng ƒë∆∞∆°ng rounded-full
    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)', // T∆∞∆°ng ƒë∆∞∆°ng transition duration-300 ease-in-out
    cursor: 'pointer', // Th√™m cursor pointer cho n√∫t
    border: 'none', // B·ªè border m·∫∑c ƒë·ªãnh c·ªßa button
    outline: 'none', // B·ªè outline khi focus
  };

  const buttonHoverStyle = { // Style cho hover, s·∫Ω ƒë∆∞·ª£c √°p d·ª•ng qua JS events
    backgroundColor: '#b91c1c', // T∆∞∆°ng ƒë∆∞∆°ng hover:bg-red-700
    transform: 'scale(1.05)', // T∆∞∆°ng ƒë∆∞∆°ng transform hover:scale-105
  };


  // X·ª≠ l√Ω responsive (min-width: 768px)
  const isLargeScreen = window.innerWidth >= 768; 

  if (isLargeScreen) {
    Object.assign(cardStyle, { flexDirection: 'row' }); // md:flex-row
    Object.assign(imageWrapperStyle, { width: '50%', padding: '1.5rem' }); // md:w-1/2 md:p-6
    Object.assign(infoWrapperStyle, { width: '50%', padding: '1.5rem' }); // md:w-1/2 md:p-6
    Object.assign(containerStyle, { padding: '2rem' }); // md:p-8
    Object.assign(notFoundTextStyle, { fontSize: '1.875rem' }); // md:text-3xl
    Object.assign(titleStyle, { fontSize: '2.25rem' }); // md:text-4xl
  }


  // Ki·ªÉm tra n·∫øu kh√¥ng t√¨m th·∫•y phim
  if (!movie) {
    return (
      <div style={notFoundContainerStyle}>
        <h2 style={notFoundTextStyle}>
          Kh√¥ng t√¨m th·∫•y phim n√†y! üò¢
        </h2>
      </div>
    );
  }

  // N·∫øu t√¨m th·∫•y phim, hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt
  return (
    <div style={containerStyle}>
      <div style={cardStyle}>
        <div style={imageWrapperStyle}>
          <img
            src={movie.img || 'https://placehold.co/400x600/1a202c/e2e8f0?text=No+Image'}
            alt={movie.title}
            style={imageStyle}
            onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/400x600/1a202c/e2e8f0?text=Image+Error'; }}
          />
        </div>
        <div style={infoWrapperStyle}>
          <h1 style={titleStyle}>
            {movie.title}
          </h1>
          {/* idphim gi·ªù l√† chu·ªói, hi·ªÉn th·ªã tr·ª±c ti·∫øp */}
          <p style={textStyle}>
            <strong>ID Phim:</strong> {movie.idphim}
          </p>
          <p style={{ ...textStyle, marginBottom: '1rem' }}> 
            <strong>Ch·∫•t l∆∞·ª£ng:</strong> {movie.quality || 'Ch∆∞a c·∫≠p nh·∫≠t'}
          </p>
          <p style={descriptionStyle}>
            ƒê√¢y l√† ph·∫ßn m√¥ t·∫£ chi ti·∫øt c·ªßa phim. B·∫°n c√≥ th·ªÉ th√™m nhi·ªÅu th√¥ng tin kh√°c v·ªÅ b·ªô phim ·ªü ƒë√¢y nh∆∞ ƒë·∫°o di·ªÖn, di·ªÖn vi√™n, th·ªÉ lo·∫°i, t√≥m t·∫Øt n·ªôi dung, v.v. ƒê·ªÉ l√†m ƒë∆∞·ª£c ƒëi·ªÅu n√†y, b·∫°n c·∫ßn b·ªï sung c√°c tr∆∞·ªùng d·ªØ li·ªáu t∆∞∆°ng ·ª©ng v√†o ƒë·ªëi t∆∞·ª£ng phim trong file `data.js` c·ªßa m√¨nh.
          </p>
          <div style={buttonContainerStyle}>
            <button 
              style={buttonStyle}
              onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
              onMouseLeave={(e) => Object.assign(e.target.style, buttonStyle)}
            >
              Xem Phim Ngay
            </button>
          </div>
        </div>
      </div>
    </div>
  )
}